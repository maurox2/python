import os
import shutil
import tkinter as tk
from tkinter import filedialog, messagebox

# Define file type categories
FILE_CATEGORIES = {
    "Images": [".jpg", ".jpeg", ".png", ".gif", ".bmp", ".tiff"],
    "Documents": [".pdf", ".doc", ".docx", ".txt", ".xls", ".xlsx", ".ppt", ".pptx"],
    "Videos": [".mp4", ".mkv", ".mov", ".avi", ".flv"],
    "Audio": [".mp3", ".wav", ".aac", ".flac"],
    "Archives": [".zip", ".rar", ".tar", ".gz", ".7z"],
    "Others": []
}

def organize_files(directory, selected_categories):
    """Organizes files in the given directory into selected categorized folders."""
    if not os.path.exists(directory):
        messagebox.showerror("Error", f"Directory '{directory}' does not exist.")
        return

    for file_name in os.listdir(directory):
        file_path = os.path.join(directory, file_name)

        # Skip directories
        if os.path.isdir(file_path):
            continue

        file_extension = os.path.splitext(file_name)[1].lower()
        category_found = False

        # Determine the category for the file
        for category, extensions in FILE_CATEGORIES.items():
            if category in selected_categories and file_extension in extensions:
                category_found = True
                category_folder = os.path.join(directory, category)
                os.makedirs(category_folder, exist_ok=True)
                shutil.move(file_path, os.path.join(category_folder, file_name))
                break

        # If no category matched, move to "Others" if selected
        if not category_found and "Others" in selected_categories:
            others_folder = os.path.join(directory, "Others")
            os.makedirs(others_folder, exist_ok=True)
            shutil.move(file_path, os.path.join(others_folder, file_name))

    messagebox.showinfo("Success", "Files have been organized successfully!")

def select_directory():
    directory = filedialog.askdirectory()
    if directory:
        directory_var.set(directory)

def organize_action():
    directory = directory_var.get()
    selected_categories = [category for category, var in category_vars.items() if var.get()]
    if not selected_categories:
        messagebox.showwarning("Warning", "Please select at least one category to organize.")
        return
    organize_files(directory, selected_categories)

# Create GUI
root = tk.Tk()
root.title("File Organizer")
root.geometry("400x400")

# Directory selection
directory_var = tk.StringVar()
tk.Label(root, text="Select Directory:").pack(pady=5)
directory_entry = tk.Entry(root, textvariable=directory_var, width=50)
directory_entry.pack(pady=5)
tk.Button(root, text="Browse", command=select_directory).pack(pady=5)

# Category selection
tk.Label(root, text="Select Categories:").pack(pady=5)
category_vars = {category: tk.BooleanVar(value=True) for category in FILE_CATEGORIES}
for category, var in category_vars.items():
    tk.Checkbutton(root, text=category, variable=var).pack(anchor="w")

# Organize button
tk.Button(root, text="Organize Files", command=organize_action).pack(pady=20)

root.mainloop()
